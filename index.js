
// Завдання 3.1

const inputString1 = prompt ('Введіть дані у першому рядку:');
const inputString2 = prompt ('Введіть дані у другому рядку:');
const inputString3 = prompt ('Введіть дані у третьому рядку:');
const concatenatedResult = inputString2 + inputString1 + inputString3;
console.log("Рядки введені в довільному порядку:" + concatenatedResult);






// Завдання 3.2


const inputNumber = prompt('Введіть п\'ятизначне число: ');
if (!isNaN(inputNumber) && inputNumber.length === 5) {
  console.log(`Число розбите за цифрами: ${inputNumber[0]} ${inputNumber[1]} ${inputNumber[2]} ${inputNumber[3]} ${inputNumber[4]}`);
} 
else {
  console.log("Введене значення не є п'ятизначним числом.");
}










































// !!! Примітки для себе !!!

// prompt() - виводить діалогове вікно з полем для вводу.
// alert() - виводить повідомлення.
// confirm() - виводить повідомлення з кнопкою Ок і Скасувати.
// var / let - перемінна змінна
// const - неперемінна змінна
// concatenatedResult - це змінна що об'єднує значення рядків, які користувач ввів у змінні 
// if (умова) {} - оператор для умовного виконання коду. (умова) - це вираз, який оцінюється на істинність або хибність.
// else {} - (перевірка if) - використовується для встановлення альтернативного дії, яка виконується, якщо умова в операторі if не виконується.
// !isNaN(inputNumber) - перевіряє чи введене значення є числом.
// "!" - в цьому виразі інвертує результат, тобто умова виконується, якщо inputNumber є числом.
// inputNumber.length === 5 - умова перевіряє, чи довжина рядка inputNumber дорівнює 5.
// .split('') - розбиває значення inputNumber на окремі символи (цифри).
// .join(' ') - з*єднює значення inputNumber.split('') використовуючи пробіли між ними. 
// == (порівняння за значенням) - оператор порівнює значення на рівність без порівняння типів даних. (1 = '1')
// === (строге порівняння) - оператор порівнює значення та типи даних (1 не = '1')
// && - це логічний оператор, використовується для комбінування двох чи більше логічних виразів і повертає 'true' тільки тоді, коли всі вирази, які з'єднуються за допомогою &&, є істинними.